//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.07.25 at 06:40:43 PM SGT 
//


package umontreal.iro.lecuyer.contactcenters.app.params;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.Duration;


/**
 * 
 *                   Gives the parameters for a call center simulation
 *                   using batch means to evaluate steady-state performance
 *                   measures.
 *                
 * 
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BatchSimParams")
public class BatchSimParams
    extends SimParams
{

    @XmlAttribute(name = "minBatches", required = true)
    protected int minBatches;
    @XmlAttribute(name = "maxBatches")
    protected Integer maxBatches;
    @XmlAttribute(name = "warmupBatches")
    protected Integer warmupBatches;
    @XmlAttribute(name = "aggregation")
    protected Boolean aggregation;
    @XmlAttribute(name = "batchSize", required = true)
    protected Duration batchSize;
    @XmlAttribute(name = "currentPeriod")
    protected Integer currentPeriod;
    @XmlAttribute(name = "initNonEmpty")
    protected Boolean initNonEmpty;
    @XmlAttribute(name = "targetInitOccupancy")
    protected Double targetInitOccupancy;
    @XmlAttribute(name = "maxInitBlocked")
    protected Integer maxInitBlocked;

    /**
     * Gets the value of the minBatches property.
     * 
     */
    public int getMinBatches() {
        return minBatches;
    }

    /**
     * Sets the value of the minBatches property.
     * 
     */
    public void setMinBatches(int value) {
        this.minBatches = value;
    }

    public boolean isSetMinBatches() {
        return true;
    }

    /**
     * Gets the value of the maxBatches property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getMaxBatches() {
        return maxBatches;
    }

    /**
     * Sets the value of the maxBatches property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMaxBatches(int value) {
        this.maxBatches = value;
    }

    public boolean isSetMaxBatches() {
        return (this.maxBatches!= null);
    }

    public void unsetMaxBatches() {
        this.maxBatches = null;
    }

    /**
     * Gets the value of the warmupBatches property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getWarmupBatches() {
        if (warmupBatches == null) {
            return  0;
        } else {
            return warmupBatches;
        }
    }

    /**
     * Sets the value of the warmupBatches property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setWarmupBatches(int value) {
        this.warmupBatches = value;
    }

    public boolean isSetWarmupBatches() {
        return (this.warmupBatches!= null);
    }

    public void unsetWarmupBatches() {
        this.warmupBatches = null;
    }

    /**
     * Gets the value of the aggregation property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isAggregation() {
        if (aggregation == null) {
            return true;
        } else {
            return aggregation;
        }
    }

    /**
     * Sets the value of the aggregation property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAggregation(boolean value) {
        this.aggregation = value;
    }

    public boolean isSetAggregation() {
        return (this.aggregation!= null);
    }

    public void unsetAggregation() {
        this.aggregation = null;
    }

    /**
     * Gets the value of the batchSize property.
     * 
     * @return
     *     possible object is
     *     {@link Duration }
     *     
     */
    public Duration getBatchSize() {
        return batchSize;
    }

    /**
     * Sets the value of the batchSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Duration }
     *     
     */
    public void setBatchSize(Duration value) {
        this.batchSize = value;
    }

    public boolean isSetBatchSize() {
        return (this.batchSize!= null);
    }

    /**
     * Gets the value of the currentPeriod property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getCurrentPeriod() {
        if (currentPeriod == null) {
            return  0;
        } else {
            return currentPeriod;
        }
    }

    /**
     * Sets the value of the currentPeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setCurrentPeriod(int value) {
        this.currentPeriod = value;
    }

    public boolean isSetCurrentPeriod() {
        return (this.currentPeriod!= null);
    }

    public void unsetCurrentPeriod() {
        this.currentPeriod = null;
    }

    /**
     * Gets the value of the initNonEmpty property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isInitNonEmpty() {
        if (initNonEmpty == null) {
            return true;
        } else {
            return initNonEmpty;
        }
    }

    /**
     * Sets the value of the initNonEmpty property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setInitNonEmpty(boolean value) {
        this.initNonEmpty = value;
    }

    public boolean isSetInitNonEmpty() {
        return (this.initNonEmpty!= null);
    }

    public void unsetInitNonEmpty() {
        this.initNonEmpty = null;
    }

    /**
     * Gets the value of the targetInitOccupancy property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getTargetInitOccupancy() {
        if (targetInitOccupancy == null) {
            return  0.9D;
        } else {
            return targetInitOccupancy;
        }
    }

    /**
     * Sets the value of the targetInitOccupancy property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setTargetInitOccupancy(double value) {
        this.targetInitOccupancy = value;
    }

    public boolean isSetTargetInitOccupancy() {
        return (this.targetInitOccupancy!= null);
    }

    public void unsetTargetInitOccupancy() {
        this.targetInitOccupancy = null;
    }

    /**
     * Gets the value of the maxInitBlocked property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getMaxInitBlocked() {
        if (maxInitBlocked == null) {
            return  1000;
        } else {
            return maxInitBlocked;
        }
    }

    /**
     * Sets the value of the maxInitBlocked property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMaxInitBlocked(int value) {
        this.maxInitBlocked = value;
    }

    public boolean isSetMaxInitBlocked() {
        return (this.maxInitBlocked!= null);
    }

    public void unsetMaxInitBlocked() {
        this.maxInitBlocked = null;
    }

}
