//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.07.25 at 06:40:43 PM SGT 
//


package umontreal.iro.lecuyer.contactcenters.msk.params;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.Duration;
import umontreal.iro.lecuyer.contactcenters.params.MultiPeriodGenParams;
import umontreal.iro.lecuyer.xmlbind.params.DoubleArray;
import umontreal.iro.lecuyer.xmlbind.params.IntArray;
import umontreal.iro.lecuyer.xmlbind.params.RandomVariateGenParams;


/**
 * 
 *                   Represents the parameters for an inbound call arrival
 *                   process, for blend/multi-skill call center.
 *                
 * 
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ArrivalProcessParams", propOrder = {
    "busyGen",
    "data",
    "arvGen",
    "arrivals",
    "poissonGammaShape",
    "poissonGammaRate",
    "copulaSigma",
    "dailyGammaPower",
    "arrivalRates",
    "nortaSigma",
    "nortaGamma",
    "nortaP",
    "times",
    "lambdas"
})
public class ArrivalProcessParams
    extends CallSourceParams
{

    protected RandomVariateGenParams busyGen;
    protected IntArray data;
    protected RandomVariateGenParams arvGen;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] arrivals;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] poissonGammaShape;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] poissonGammaRate;
    protected DoubleArray copulaSigma;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] dailyGammaPower;
    protected MultiPeriodGenParams arrivalRates;
    protected DoubleArray nortaSigma;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] nortaGamma;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] nortaP;
    @XmlList
    protected Duration[] times;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] lambdas;
    @XmlAttribute(name = "type")
    protected String type;
    @XmlAttribute(name = "normalize")
    protected Boolean normalize;
    @XmlAttribute(name = "estimateBusyness")
    protected Boolean estimateBusyness;
    @XmlAttribute(name = "estimateDailyGammaPower")
    protected Boolean estimateDailyGammaPower;
    @XmlAttribute(name = "splineSmoothingFactor")
    protected Double splineSmoothingFactor;
    @XmlAttribute(name = "correlationFit")
    protected CorrelationFit correlationFit;
    @XmlAttribute(name = "gammaShapeEstimatorType")
    protected GammaShapeEstimatorType gammaShapeEstimatorType;
    @XmlAttribute(name = "gammaShapeSmoothingFactor")
    protected Double gammaShapeSmoothingFactor;
    @XmlAttribute(name = "maxIter")
    protected Integer maxIter;
    @XmlAttribute(name = "movingWindowSize")
    protected Integer movingWindowSize;
    @XmlAttribute(name = "numMonteCarlo")
    protected Integer numMonteCarlo;
    @XmlAttribute(name = "varianceEpsilon")
    protected Double varianceEpsilon;
    @XmlAttribute(name = "arrivalsMult")
    protected Double arrivalsMult;

    /**
     * Gets the value of the busyGen property.
     * 
     * @return
     *     possible object is
     *     {@link RandomVariateGenParams }
     *     
     */
    public RandomVariateGenParams getBusyGen() {
        return busyGen;
    }

    /**
     * Sets the value of the busyGen property.
     * 
     * @param value
     *     allowed object is
     *     {@link RandomVariateGenParams }
     *     
     */
    public void setBusyGen(RandomVariateGenParams value) {
        this.busyGen = value;
    }

    public boolean isSetBusyGen() {
        return (this.busyGen!= null);
    }

    /**
     * Gets the value of the data property.
     * 
     * @return
     *     possible object is
     *     {@link IntArray }
     *     
     */
    public IntArray getData() {
        return data;
    }

    /**
     * Sets the value of the data property.
     * 
     * @param value
     *     allowed object is
     *     {@link IntArray }
     *     
     */
    public void setData(IntArray value) {
        this.data = value;
    }

    public boolean isSetData() {
        return (this.data!= null);
    }

    /**
     * Gets the value of the arvGen property.
     * 
     * @return
     *     possible object is
     *     {@link RandomVariateGenParams }
     *     
     */
    public RandomVariateGenParams getArvGen() {
        return arvGen;
    }

    /**
     * Sets the value of the arvGen property.
     * 
     * @param value
     *     allowed object is
     *     {@link RandomVariateGenParams }
     *     
     */
    public void setArvGen(RandomVariateGenParams value) {
        this.arvGen = value;
    }

    public boolean isSetArvGen() {
        return (this.arvGen!= null);
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getArrivals() {
        if (this.arrivals == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.arrivals.length] ;
        System.arraycopy(this.arrivals, 0, retVal, 0, this.arrivals.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getArrivals(int idx) {
        if (this.arrivals == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.arrivals[idx];
    }

    public int getArrivalsLength() {
        if (this.arrivals == null) {
            return  0;
        }
        return this.arrivals.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setArrivals(double[] values) {
        int len = values.length;
        this.arrivals = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.arrivals[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setArrivals(int idx, double value) {
        return this.arrivals[idx] = new Double(value);
    }

    public boolean isSetArrivals() {
        return ((this.arrivals!= null)&&(this.arrivals.length > 0));
    }

    public void unsetArrivals() {
        this.arrivals = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getPoissonGammaShape() {
        if (this.poissonGammaShape == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.poissonGammaShape.length] ;
        System.arraycopy(this.poissonGammaShape, 0, retVal, 0, this.poissonGammaShape.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getPoissonGammaShape(int idx) {
        if (this.poissonGammaShape == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.poissonGammaShape[idx];
    }

    public int getPoissonGammaShapeLength() {
        if (this.poissonGammaShape == null) {
            return  0;
        }
        return this.poissonGammaShape.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setPoissonGammaShape(double[] values) {
        int len = values.length;
        this.poissonGammaShape = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.poissonGammaShape[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setPoissonGammaShape(int idx, double value) {
        return this.poissonGammaShape[idx] = new Double(value);
    }

    public boolean isSetPoissonGammaShape() {
        return ((this.poissonGammaShape!= null)&&(this.poissonGammaShape.length > 0));
    }

    public void unsetPoissonGammaShape() {
        this.poissonGammaShape = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getPoissonGammaRate() {
        if (this.poissonGammaRate == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.poissonGammaRate.length] ;
        System.arraycopy(this.poissonGammaRate, 0, retVal, 0, this.poissonGammaRate.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getPoissonGammaRate(int idx) {
        if (this.poissonGammaRate == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.poissonGammaRate[idx];
    }

    public int getPoissonGammaRateLength() {
        if (this.poissonGammaRate == null) {
            return  0;
        }
        return this.poissonGammaRate.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setPoissonGammaRate(double[] values) {
        int len = values.length;
        this.poissonGammaRate = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.poissonGammaRate[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setPoissonGammaRate(int idx, double value) {
        return this.poissonGammaRate[idx] = new Double(value);
    }

    public boolean isSetPoissonGammaRate() {
        return ((this.poissonGammaRate!= null)&&(this.poissonGammaRate.length > 0));
    }

    public void unsetPoissonGammaRate() {
        this.poissonGammaRate = null;
    }

    /**
     * Gets the value of the copulaSigma property.
     * 
     * @return
     *     possible object is
     *     {@link DoubleArray }
     *     
     */
    public DoubleArray getCopulaSigma() {
        return copulaSigma;
    }

    /**
     * Sets the value of the copulaSigma property.
     * 
     * @param value
     *     allowed object is
     *     {@link DoubleArray }
     *     
     */
    public void setCopulaSigma(DoubleArray value) {
        this.copulaSigma = value;
    }

    public boolean isSetCopulaSigma() {
        return (this.copulaSigma!= null);
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getDailyGammaPower() {
        if (this.dailyGammaPower == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.dailyGammaPower.length] ;
        System.arraycopy(this.dailyGammaPower, 0, retVal, 0, this.dailyGammaPower.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getDailyGammaPower(int idx) {
        if (this.dailyGammaPower == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.dailyGammaPower[idx];
    }

    public int getDailyGammaPowerLength() {
        if (this.dailyGammaPower == null) {
            return  0;
        }
        return this.dailyGammaPower.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setDailyGammaPower(double[] values) {
        int len = values.length;
        this.dailyGammaPower = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.dailyGammaPower[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setDailyGammaPower(int idx, double value) {
        return this.dailyGammaPower[idx] = new Double(value);
    }

    public boolean isSetDailyGammaPower() {
        return ((this.dailyGammaPower!= null)&&(this.dailyGammaPower.length > 0));
    }

    public void unsetDailyGammaPower() {
        this.dailyGammaPower = null;
    }

    /**
     * Gets the value of the arrivalRates property.
     * 
     * @return
     *     possible object is
     *     {@link MultiPeriodGenParams }
     *     
     */
    public MultiPeriodGenParams getArrivalRates() {
        return arrivalRates;
    }

    /**
     * Sets the value of the arrivalRates property.
     * 
     * @param value
     *     allowed object is
     *     {@link MultiPeriodGenParams }
     *     
     */
    public void setArrivalRates(MultiPeriodGenParams value) {
        this.arrivalRates = value;
    }

    public boolean isSetArrivalRates() {
        return (this.arrivalRates!= null);
    }

    /**
     * Gets the value of the nortaSigma property.
     * 
     * @return
     *     possible object is
     *     {@link DoubleArray }
     *     
     */
    public DoubleArray getNortaSigma() {
        return nortaSigma;
    }

    /**
     * Sets the value of the nortaSigma property.
     * 
     * @param value
     *     allowed object is
     *     {@link DoubleArray }
     *     
     */
    public void setNortaSigma(DoubleArray value) {
        this.nortaSigma = value;
    }

    public boolean isSetNortaSigma() {
        return (this.nortaSigma!= null);
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getNortaGamma() {
        if (this.nortaGamma == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.nortaGamma.length] ;
        System.arraycopy(this.nortaGamma, 0, retVal, 0, this.nortaGamma.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getNortaGamma(int idx) {
        if (this.nortaGamma == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.nortaGamma[idx];
    }

    public int getNortaGammaLength() {
        if (this.nortaGamma == null) {
            return  0;
        }
        return this.nortaGamma.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setNortaGamma(double[] values) {
        int len = values.length;
        this.nortaGamma = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.nortaGamma[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setNortaGamma(int idx, double value) {
        return this.nortaGamma[idx] = new Double(value);
    }

    public boolean isSetNortaGamma() {
        return ((this.nortaGamma!= null)&&(this.nortaGamma.length > 0));
    }

    public void unsetNortaGamma() {
        this.nortaGamma = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getNortaP() {
        if (this.nortaP == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.nortaP.length] ;
        System.arraycopy(this.nortaP, 0, retVal, 0, this.nortaP.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getNortaP(int idx) {
        if (this.nortaP == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.nortaP[idx];
    }

    public int getNortaPLength() {
        if (this.nortaP == null) {
            return  0;
        }
        return this.nortaP.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setNortaP(double[] values) {
        int len = values.length;
        this.nortaP = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.nortaP[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setNortaP(int idx, double value) {
        return this.nortaP[idx] = new Double(value);
    }

    public boolean isSetNortaP() {
        return ((this.nortaP!= null)&&(this.nortaP.length > 0));
    }

    public void unsetNortaP() {
        this.nortaP = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Duration }
     *     
     */
    public Duration[] getTimes() {
        if (this.times == null) {
            return new Duration[ 0 ] ;
        }
        Duration[] retVal = new Duration[this.times.length] ;
        System.arraycopy(this.times, 0, retVal, 0, this.times.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Duration }
     *     
     */
    public Duration getTimes(int idx) {
        if (this.times == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.times[idx];
    }

    public int getTimesLength() {
        if (this.times == null) {
            return  0;
        }
        return this.times.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Duration }
     *     
     */
    public void setTimes(Duration[] values) {
        int len = values.length;
        this.times = ((Duration[]) new Duration[len] );
        for (int i = 0; (i<len); i ++) {
            this.times[i] = values[i];
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Duration }
     *     
     */
    public Duration setTimes(int idx, Duration value) {
        return this.times[idx] = value;
    }

    public boolean isSetTimes() {
        return ((this.times!= null)&&(this.times.length > 0));
    }

    public void unsetTimes() {
        this.times = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getLambdas() {
        if (this.lambdas == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.lambdas.length] ;
        System.arraycopy(this.lambdas, 0, retVal, 0, this.lambdas.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getLambdas(int idx) {
        if (this.lambdas == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.lambdas[idx];
    }

    public int getLambdasLength() {
        if (this.lambdas == null) {
            return  0;
        }
        return this.lambdas.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setLambdas(double[] values) {
        int len = values.length;
        this.lambdas = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.lambdas[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setLambdas(int idx, double value) {
        return this.lambdas[idx] = new Double(value);
    }

    public boolean isSetLambdas() {
        return ((this.lambdas!= null)&&(this.lambdas.length > 0));
    }

    public void unsetLambdas() {
        this.lambdas = null;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

    public boolean isSetType() {
        return (this.type!= null);
    }

    /**
     * Gets the value of the normalize property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isNormalize() {
        if (normalize == null) {
            return false;
        } else {
            return normalize;
        }
    }

    /**
     * Sets the value of the normalize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setNormalize(boolean value) {
        this.normalize = value;
    }

    public boolean isSetNormalize() {
        return (this.normalize!= null);
    }

    public void unsetNormalize() {
        this.normalize = null;
    }

    /**
     * Gets the value of the estimateBusyness property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isEstimateBusyness() {
        if (estimateBusyness == null) {
            return false;
        } else {
            return estimateBusyness;
        }
    }

    /**
     * Sets the value of the estimateBusyness property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEstimateBusyness(boolean value) {
        this.estimateBusyness = value;
    }

    public boolean isSetEstimateBusyness() {
        return (this.estimateBusyness!= null);
    }

    public void unsetEstimateBusyness() {
        this.estimateBusyness = null;
    }

    /**
     * Gets the value of the estimateDailyGammaPower property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isEstimateDailyGammaPower() {
        if (estimateDailyGammaPower == null) {
            return false;
        } else {
            return estimateDailyGammaPower;
        }
    }

    /**
     * Sets the value of the estimateDailyGammaPower property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEstimateDailyGammaPower(boolean value) {
        this.estimateDailyGammaPower = value;
    }

    public boolean isSetEstimateDailyGammaPower() {
        return (this.estimateDailyGammaPower!= null);
    }

    public void unsetEstimateDailyGammaPower() {
        this.estimateDailyGammaPower = null;
    }

    /**
     * Gets the value of the splineSmoothingFactor property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getSplineSmoothingFactor() {
        if (splineSmoothingFactor == null) {
            return  1.0D;
        } else {
            return splineSmoothingFactor;
        }
    }

    /**
     * Sets the value of the splineSmoothingFactor property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setSplineSmoothingFactor(double value) {
        this.splineSmoothingFactor = value;
    }

    public boolean isSetSplineSmoothingFactor() {
        return (this.splineSmoothingFactor!= null);
    }

    public void unsetSplineSmoothingFactor() {
        this.splineSmoothingFactor = null;
    }

    /**
     * Gets the value of the correlationFit property.
     * 
     * @return
     *     possible object is
     *     {@link CorrelationFit }
     *     
     */
    public CorrelationFit getCorrelationFit() {
        if (correlationFit == null) {
            return CorrelationFit.MARKOVLINEARFIT;
        } else {
            return correlationFit;
        }
    }

    /**
     * Sets the value of the correlationFit property.
     * 
     * @param value
     *     allowed object is
     *     {@link CorrelationFit }
     *     
     */
    public void setCorrelationFit(CorrelationFit value) {
        this.correlationFit = value;
    }

    public boolean isSetCorrelationFit() {
        return (this.correlationFit!= null);
    }

    /**
     * Gets the value of the gammaShapeEstimatorType property.
     * 
     * @return
     *     possible object is
     *     {@link GammaShapeEstimatorType }
     *     
     */
    public GammaShapeEstimatorType getGammaShapeEstimatorType() {
        if (gammaShapeEstimatorType == null) {
            return GammaShapeEstimatorType.SINGLESHAPE;
        } else {
            return gammaShapeEstimatorType;
        }
    }

    /**
     * Sets the value of the gammaShapeEstimatorType property.
     * 
     * @param value
     *     allowed object is
     *     {@link GammaShapeEstimatorType }
     *     
     */
    public void setGammaShapeEstimatorType(GammaShapeEstimatorType value) {
        this.gammaShapeEstimatorType = value;
    }

    public boolean isSetGammaShapeEstimatorType() {
        return (this.gammaShapeEstimatorType!= null);
    }

    /**
     * Gets the value of the gammaShapeSmoothingFactor property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getGammaShapeSmoothingFactor() {
        if (gammaShapeSmoothingFactor == null) {
            return  0.95D;
        } else {
            return gammaShapeSmoothingFactor;
        }
    }

    /**
     * Sets the value of the gammaShapeSmoothingFactor property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setGammaShapeSmoothingFactor(double value) {
        this.gammaShapeSmoothingFactor = value;
    }

    public boolean isSetGammaShapeSmoothingFactor() {
        return (this.gammaShapeSmoothingFactor!= null);
    }

    public void unsetGammaShapeSmoothingFactor() {
        this.gammaShapeSmoothingFactor = null;
    }

    /**
     * Gets the value of the maxIter property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getMaxIter() {
        if (maxIter == null) {
            return  200;
        } else {
            return maxIter;
        }
    }

    /**
     * Sets the value of the maxIter property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMaxIter(int value) {
        this.maxIter = value;
    }

    public boolean isSetMaxIter() {
        return (this.maxIter!= null);
    }

    public void unsetMaxIter() {
        this.maxIter = null;
    }

    /**
     * Gets the value of the movingWindowSize property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getMovingWindowSize() {
        if (movingWindowSize == null) {
            return  5;
        } else {
            return movingWindowSize;
        }
    }

    /**
     * Sets the value of the movingWindowSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMovingWindowSize(int value) {
        this.movingWindowSize = value;
    }

    public boolean isSetMovingWindowSize() {
        return (this.movingWindowSize!= null);
    }

    public void unsetMovingWindowSize() {
        this.movingWindowSize = null;
    }

    /**
     * Gets the value of the numMonteCarlo property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getNumMonteCarlo() {
        if (numMonteCarlo == null) {
            return  200;
        } else {
            return numMonteCarlo;
        }
    }

    /**
     * Sets the value of the numMonteCarlo property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNumMonteCarlo(int value) {
        this.numMonteCarlo = value;
    }

    public boolean isSetNumMonteCarlo() {
        return (this.numMonteCarlo!= null);
    }

    public void unsetNumMonteCarlo() {
        this.numMonteCarlo = null;
    }

    /**
     * Gets the value of the varianceEpsilon property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getVarianceEpsilon() {
        if (varianceEpsilon == null) {
            return  1.0E-4D;
        } else {
            return varianceEpsilon;
        }
    }

    /**
     * Sets the value of the varianceEpsilon property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setVarianceEpsilon(double value) {
        this.varianceEpsilon = value;
    }

    public boolean isSetVarianceEpsilon() {
        return (this.varianceEpsilon!= null);
    }

    public void unsetVarianceEpsilon() {
        this.varianceEpsilon = null;
    }

    /**
     * Gets the value of the arrivalsMult property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getArrivalsMult() {
        if (arrivalsMult == null) {
            return  1.0D;
        } else {
            return arrivalsMult;
        }
    }

    /**
     * Sets the value of the arrivalsMult property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setArrivalsMult(double value) {
        this.arrivalsMult = value;
    }

    public boolean isSetArrivalsMult() {
        return (this.arrivalsMult!= null);
    }

    public void unsetArrivalsMult() {
        this.arrivalsMult = null;
    }

}
