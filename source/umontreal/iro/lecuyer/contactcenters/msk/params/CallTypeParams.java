//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.07.25 at 06:40:43 PM SGT 
//


package umontreal.iro.lecuyer.contactcenters.msk.params;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.Duration;
import umontreal.iro.lecuyer.contactcenters.params.MultiPeriodGenParams;
import umontreal.iro.lecuyer.xmlbind.params.DoubleArray;
import umontreal.iro.lecuyer.xmlbind.params.Named;


/**
 * 
 *                   Represents the parameters common for inbound and
 *                   outbound call types, used by blend/multi-skill call
 *                   center models.
 *                
 * 
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CallTypeParams", propOrder = {
    "weightPeriod",
    "probAbandon",
    "patienceTime",
    "serviceTimes",
    "conferenceTimes",
    "preServiceTimesNoConf",
    "serviceTimesMultTransfer",
    "transferTimes",
    "probTransfer",
    "probTransferWait",
    "transferTargets",
    "expectedWaitingTimeThresh",
    "expectedWaitingTimesMult",
    "probVirtualQueue",
    "probVirtualQueueCallBack",
    "patienceTimesMultNoVirtualQueue",
    "patienceTimesMultCallBack",
    "serviceTimesMultNoVirtualQueue",
    "serviceTimesMultCallBack"
})
@XmlSeeAlso({
    InboundTypeParams.class,
    OutboundTypeParams.class
})
public abstract class CallTypeParams
    extends Named
{

    @XmlList
    @XmlElement(type = Double.class)
    protected double[] weightPeriod;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] probAbandon;
    protected MultiPeriodGenParams patienceTime;
    @XmlElement(name = "serviceTime")
    protected List<ServiceTimeParams> serviceTimes;
    @XmlElement(name = "conferenceTime")
    protected List<ServiceTimeParams> conferenceTimes;
    @XmlElement(name = "preServiceTimeNoConf")
    protected List<ServiceTimeParams> preServiceTimesNoConf;
    protected DoubleArray serviceTimesMultTransfer;
    @XmlElement(name = "transferTime")
    protected List<ServiceTimeParams> transferTimes;
    protected DoubleArray probTransfer;
    protected DoubleArray probTransferWait;
    @XmlElement(name = "transferTarget")
    protected List<ProducedCallTypeParams> transferTargets;
    @XmlList
    protected Duration[] expectedWaitingTimeThresh;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] expectedWaitingTimesMult;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] probVirtualQueue;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] probVirtualQueueCallBack;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] patienceTimesMultNoVirtualQueue;
    @XmlList
    @XmlElement(type = Double.class)
    protected double[] patienceTimesMultCallBack;
    protected DoubleArray serviceTimesMultNoVirtualQueue;
    protected DoubleArray serviceTimesMultCallBack;
    @XmlAttribute(name = "weight")
    protected Double weight;
    @XmlAttribute(name = "serviceTimesMult")
    protected Double serviceTimesMult;
    @XmlAttribute(name = "conferenceTimesMult")
    protected Double conferenceTimesMult;
    @XmlAttribute(name = "preServiceTimesNoConfMult")
    protected Double preServiceTimesNoConfMult;
    @XmlAttribute(name = "transferTimesMult")
    protected Double transferTimesMult;
    @XmlAttribute(name = "checkAgentsForTransfer")
    protected Boolean checkAgentsForTransfer;
    @XmlAttribute(name = "waitingTimeDefaultVQ")
    protected Double waitingTimeDefaultVQ;
    @XmlAttribute(name = "windowSizeVQ")
    protected Integer windowSizeVQ;
    @XmlAttribute(name = "virtualQueueTargetType")
    protected Integer virtualQueueTargetType;

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getWeightPeriod() {
        if (this.weightPeriod == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.weightPeriod.length] ;
        System.arraycopy(this.weightPeriod, 0, retVal, 0, this.weightPeriod.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getWeightPeriod(int idx) {
        if (this.weightPeriod == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.weightPeriod[idx];
    }

    public int getWeightPeriodLength() {
        if (this.weightPeriod == null) {
            return  0;
        }
        return this.weightPeriod.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setWeightPeriod(double[] values) {
        int len = values.length;
        this.weightPeriod = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.weightPeriod[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setWeightPeriod(int idx, double value) {
        return this.weightPeriod[idx] = new Double(value);
    }

    public boolean isSetWeightPeriod() {
        return ((this.weightPeriod!= null)&&(this.weightPeriod.length > 0));
    }

    public void unsetWeightPeriod() {
        this.weightPeriod = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getProbAbandon() {
        if (this.probAbandon == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.probAbandon.length] ;
        System.arraycopy(this.probAbandon, 0, retVal, 0, this.probAbandon.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getProbAbandon(int idx) {
        if (this.probAbandon == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.probAbandon[idx];
    }

    public int getProbAbandonLength() {
        if (this.probAbandon == null) {
            return  0;
        }
        return this.probAbandon.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setProbAbandon(double[] values) {
        int len = values.length;
        this.probAbandon = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.probAbandon[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setProbAbandon(int idx, double value) {
        return this.probAbandon[idx] = new Double(value);
    }

    public boolean isSetProbAbandon() {
        return ((this.probAbandon!= null)&&(this.probAbandon.length > 0));
    }

    public void unsetProbAbandon() {
        this.probAbandon = null;
    }

    /**
     * Gets the value of the patienceTime property.
     * 
     * @return
     *     possible object is
     *     {@link MultiPeriodGenParams }
     *     
     */
    public MultiPeriodGenParams getPatienceTime() {
        return patienceTime;
    }

    /**
     * Sets the value of the patienceTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link MultiPeriodGenParams }
     *     
     */
    public void setPatienceTime(MultiPeriodGenParams value) {
        this.patienceTime = value;
    }

    public boolean isSetPatienceTime() {
        return (this.patienceTime!= null);
    }

    /**
     * Gets the value of the serviceTimes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the serviceTimes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getServiceTimes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ServiceTimeParams }
     * 
     * 
     */
    public List<ServiceTimeParams> getServiceTimes() {
        if (serviceTimes == null) {
            serviceTimes = new ArrayList<ServiceTimeParams>();
        }
        return this.serviceTimes;
    }

    public boolean isSetServiceTimes() {
        return ((this.serviceTimes!= null)&&(!this.serviceTimes.isEmpty()));
    }

    public void unsetServiceTimes() {
        this.serviceTimes = null;
    }

    /**
     * Gets the value of the conferenceTimes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conferenceTimes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConferenceTimes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ServiceTimeParams }
     * 
     * 
     */
    public List<ServiceTimeParams> getConferenceTimes() {
        if (conferenceTimes == null) {
            conferenceTimes = new ArrayList<ServiceTimeParams>();
        }
        return this.conferenceTimes;
    }

    public boolean isSetConferenceTimes() {
        return ((this.conferenceTimes!= null)&&(!this.conferenceTimes.isEmpty()));
    }

    public void unsetConferenceTimes() {
        this.conferenceTimes = null;
    }

    /**
     * Gets the value of the preServiceTimesNoConf property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the preServiceTimesNoConf property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPreServiceTimesNoConf().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ServiceTimeParams }
     * 
     * 
     */
    public List<ServiceTimeParams> getPreServiceTimesNoConf() {
        if (preServiceTimesNoConf == null) {
            preServiceTimesNoConf = new ArrayList<ServiceTimeParams>();
        }
        return this.preServiceTimesNoConf;
    }

    public boolean isSetPreServiceTimesNoConf() {
        return ((this.preServiceTimesNoConf!= null)&&(!this.preServiceTimesNoConf.isEmpty()));
    }

    public void unsetPreServiceTimesNoConf() {
        this.preServiceTimesNoConf = null;
    }

    /**
     * Gets the value of the serviceTimesMultTransfer property.
     * 
     * @return
     *     possible object is
     *     {@link DoubleArray }
     *     
     */
    public DoubleArray getServiceTimesMultTransfer() {
        return serviceTimesMultTransfer;
    }

    /**
     * Sets the value of the serviceTimesMultTransfer property.
     * 
     * @param value
     *     allowed object is
     *     {@link DoubleArray }
     *     
     */
    public void setServiceTimesMultTransfer(DoubleArray value) {
        this.serviceTimesMultTransfer = value;
    }

    public boolean isSetServiceTimesMultTransfer() {
        return (this.serviceTimesMultTransfer!= null);
    }

    /**
     * Gets the value of the transferTimes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the transferTimes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTransferTimes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ServiceTimeParams }
     * 
     * 
     */
    public List<ServiceTimeParams> getTransferTimes() {
        if (transferTimes == null) {
            transferTimes = new ArrayList<ServiceTimeParams>();
        }
        return this.transferTimes;
    }

    public boolean isSetTransferTimes() {
        return ((this.transferTimes!= null)&&(!this.transferTimes.isEmpty()));
    }

    public void unsetTransferTimes() {
        this.transferTimes = null;
    }

    /**
     * Gets the value of the probTransfer property.
     * 
     * @return
     *     possible object is
     *     {@link DoubleArray }
     *     
     */
    public DoubleArray getProbTransfer() {
        return probTransfer;
    }

    /**
     * Sets the value of the probTransfer property.
     * 
     * @param value
     *     allowed object is
     *     {@link DoubleArray }
     *     
     */
    public void setProbTransfer(DoubleArray value) {
        this.probTransfer = value;
    }

    public boolean isSetProbTransfer() {
        return (this.probTransfer!= null);
    }

    /**
     * Gets the value of the probTransferWait property.
     * 
     * @return
     *     possible object is
     *     {@link DoubleArray }
     *     
     */
    public DoubleArray getProbTransferWait() {
        return probTransferWait;
    }

    /**
     * Sets the value of the probTransferWait property.
     * 
     * @param value
     *     allowed object is
     *     {@link DoubleArray }
     *     
     */
    public void setProbTransferWait(DoubleArray value) {
        this.probTransferWait = value;
    }

    public boolean isSetProbTransferWait() {
        return (this.probTransferWait!= null);
    }

    /**
     * Gets the value of the transferTargets property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the transferTargets property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTransferTargets().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProducedCallTypeParams }
     * 
     * 
     */
    public List<ProducedCallTypeParams> getTransferTargets() {
        if (transferTargets == null) {
            transferTargets = new ArrayList<ProducedCallTypeParams>();
        }
        return this.transferTargets;
    }

    public boolean isSetTransferTargets() {
        return ((this.transferTargets!= null)&&(!this.transferTargets.isEmpty()));
    }

    public void unsetTransferTargets() {
        this.transferTargets = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Duration }
     *     
     */
    public Duration[] getExpectedWaitingTimeThresh() {
        if (this.expectedWaitingTimeThresh == null) {
            return new Duration[ 0 ] ;
        }
        Duration[] retVal = new Duration[this.expectedWaitingTimeThresh.length] ;
        System.arraycopy(this.expectedWaitingTimeThresh, 0, retVal, 0, this.expectedWaitingTimeThresh.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Duration }
     *     
     */
    public Duration getExpectedWaitingTimeThresh(int idx) {
        if (this.expectedWaitingTimeThresh == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.expectedWaitingTimeThresh[idx];
    }

    public int getExpectedWaitingTimeThreshLength() {
        if (this.expectedWaitingTimeThresh == null) {
            return  0;
        }
        return this.expectedWaitingTimeThresh.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Duration }
     *     
     */
    public void setExpectedWaitingTimeThresh(Duration[] values) {
        int len = values.length;
        this.expectedWaitingTimeThresh = ((Duration[]) new Duration[len] );
        for (int i = 0; (i<len); i ++) {
            this.expectedWaitingTimeThresh[i] = values[i];
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Duration }
     *     
     */
    public Duration setExpectedWaitingTimeThresh(int idx, Duration value) {
        return this.expectedWaitingTimeThresh[idx] = value;
    }

    public boolean isSetExpectedWaitingTimeThresh() {
        return ((this.expectedWaitingTimeThresh!= null)&&(this.expectedWaitingTimeThresh.length > 0));
    }

    public void unsetExpectedWaitingTimeThresh() {
        this.expectedWaitingTimeThresh = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getExpectedWaitingTimesMult() {
        if (this.expectedWaitingTimesMult == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.expectedWaitingTimesMult.length] ;
        System.arraycopy(this.expectedWaitingTimesMult, 0, retVal, 0, this.expectedWaitingTimesMult.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getExpectedWaitingTimesMult(int idx) {
        if (this.expectedWaitingTimesMult == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.expectedWaitingTimesMult[idx];
    }

    public int getExpectedWaitingTimesMultLength() {
        if (this.expectedWaitingTimesMult == null) {
            return  0;
        }
        return this.expectedWaitingTimesMult.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setExpectedWaitingTimesMult(double[] values) {
        int len = values.length;
        this.expectedWaitingTimesMult = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.expectedWaitingTimesMult[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setExpectedWaitingTimesMult(int idx, double value) {
        return this.expectedWaitingTimesMult[idx] = new Double(value);
    }

    public boolean isSetExpectedWaitingTimesMult() {
        return ((this.expectedWaitingTimesMult!= null)&&(this.expectedWaitingTimesMult.length > 0));
    }

    public void unsetExpectedWaitingTimesMult() {
        this.expectedWaitingTimesMult = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getProbVirtualQueue() {
        if (this.probVirtualQueue == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.probVirtualQueue.length] ;
        System.arraycopy(this.probVirtualQueue, 0, retVal, 0, this.probVirtualQueue.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getProbVirtualQueue(int idx) {
        if (this.probVirtualQueue == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.probVirtualQueue[idx];
    }

    public int getProbVirtualQueueLength() {
        if (this.probVirtualQueue == null) {
            return  0;
        }
        return this.probVirtualQueue.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setProbVirtualQueue(double[] values) {
        int len = values.length;
        this.probVirtualQueue = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.probVirtualQueue[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setProbVirtualQueue(int idx, double value) {
        return this.probVirtualQueue[idx] = new Double(value);
    }

    public boolean isSetProbVirtualQueue() {
        return ((this.probVirtualQueue!= null)&&(this.probVirtualQueue.length > 0));
    }

    public void unsetProbVirtualQueue() {
        this.probVirtualQueue = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getProbVirtualQueueCallBack() {
        if (this.probVirtualQueueCallBack == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.probVirtualQueueCallBack.length] ;
        System.arraycopy(this.probVirtualQueueCallBack, 0, retVal, 0, this.probVirtualQueueCallBack.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getProbVirtualQueueCallBack(int idx) {
        if (this.probVirtualQueueCallBack == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.probVirtualQueueCallBack[idx];
    }

    public int getProbVirtualQueueCallBackLength() {
        if (this.probVirtualQueueCallBack == null) {
            return  0;
        }
        return this.probVirtualQueueCallBack.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setProbVirtualQueueCallBack(double[] values) {
        int len = values.length;
        this.probVirtualQueueCallBack = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.probVirtualQueueCallBack[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setProbVirtualQueueCallBack(int idx, double value) {
        return this.probVirtualQueueCallBack[idx] = new Double(value);
    }

    public boolean isSetProbVirtualQueueCallBack() {
        return ((this.probVirtualQueueCallBack!= null)&&(this.probVirtualQueueCallBack.length > 0));
    }

    public void unsetProbVirtualQueueCallBack() {
        this.probVirtualQueueCallBack = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getPatienceTimesMultNoVirtualQueue() {
        if (this.patienceTimesMultNoVirtualQueue == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.patienceTimesMultNoVirtualQueue.length] ;
        System.arraycopy(this.patienceTimesMultNoVirtualQueue, 0, retVal, 0, this.patienceTimesMultNoVirtualQueue.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getPatienceTimesMultNoVirtualQueue(int idx) {
        if (this.patienceTimesMultNoVirtualQueue == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.patienceTimesMultNoVirtualQueue[idx];
    }

    public int getPatienceTimesMultNoVirtualQueueLength() {
        if (this.patienceTimesMultNoVirtualQueue == null) {
            return  0;
        }
        return this.patienceTimesMultNoVirtualQueue.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setPatienceTimesMultNoVirtualQueue(double[] values) {
        int len = values.length;
        this.patienceTimesMultNoVirtualQueue = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.patienceTimesMultNoVirtualQueue[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setPatienceTimesMultNoVirtualQueue(int idx, double value) {
        return this.patienceTimesMultNoVirtualQueue[idx] = new Double(value);
    }

    public boolean isSetPatienceTimesMultNoVirtualQueue() {
        return ((this.patienceTimesMultNoVirtualQueue!= null)&&(this.patienceTimesMultNoVirtualQueue.length > 0));
    }

    public void unsetPatienceTimesMultNoVirtualQueue() {
        this.patienceTimesMultNoVirtualQueue = null;
    }

    /**
     * 
     * 
     * @return
     *     array of
     *     {@link Double }
     *     
     */
    public double[] getPatienceTimesMultCallBack() {
        if (this.patienceTimesMultCallBack == null) {
            return new double[ 0 ] ;
        }
        double[] retVal = new double[this.patienceTimesMultCallBack.length] ;
        System.arraycopy(this.patienceTimesMultCallBack, 0, retVal, 0, this.patienceTimesMultCallBack.length);
        return (retVal);
    }

    /**
     * 
     * 
     * @return
     *     one of
     *     {@link Double }
     *     
     */
    public double getPatienceTimesMultCallBack(int idx) {
        if (this.patienceTimesMultCallBack == null) {
            throw new IndexOutOfBoundsException();
        }
        return this.patienceTimesMultCallBack[idx];
    }

    public int getPatienceTimesMultCallBackLength() {
        if (this.patienceTimesMultCallBack == null) {
            return  0;
        }
        return this.patienceTimesMultCallBack.length;
    }

    /**
     * 
     * 
     * @param values
     *     allowed objects are
     *     {@link Double }
     *     
     */
    public void setPatienceTimesMultCallBack(double[] values) {
        int len = values.length;
        this.patienceTimesMultCallBack = ((double[]) new double[len] );
        for (int i = 0; (i<len); i ++) {
            this.patienceTimesMultCallBack[i] = new Double(values[i]);
        }
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public double setPatienceTimesMultCallBack(int idx, double value) {
        return this.patienceTimesMultCallBack[idx] = new Double(value);
    }

    public boolean isSetPatienceTimesMultCallBack() {
        return ((this.patienceTimesMultCallBack!= null)&&(this.patienceTimesMultCallBack.length > 0));
    }

    public void unsetPatienceTimesMultCallBack() {
        this.patienceTimesMultCallBack = null;
    }

    /**
     * Gets the value of the serviceTimesMultNoVirtualQueue property.
     * 
     * @return
     *     possible object is
     *     {@link DoubleArray }
     *     
     */
    public DoubleArray getServiceTimesMultNoVirtualQueue() {
        return serviceTimesMultNoVirtualQueue;
    }

    /**
     * Sets the value of the serviceTimesMultNoVirtualQueue property.
     * 
     * @param value
     *     allowed object is
     *     {@link DoubleArray }
     *     
     */
    public void setServiceTimesMultNoVirtualQueue(DoubleArray value) {
        this.serviceTimesMultNoVirtualQueue = value;
    }

    public boolean isSetServiceTimesMultNoVirtualQueue() {
        return (this.serviceTimesMultNoVirtualQueue!= null);
    }

    /**
     * Gets the value of the serviceTimesMultCallBack property.
     * 
     * @return
     *     possible object is
     *     {@link DoubleArray }
     *     
     */
    public DoubleArray getServiceTimesMultCallBack() {
        return serviceTimesMultCallBack;
    }

    /**
     * Sets the value of the serviceTimesMultCallBack property.
     * 
     * @param value
     *     allowed object is
     *     {@link DoubleArray }
     *     
     */
    public void setServiceTimesMultCallBack(DoubleArray value) {
        this.serviceTimesMultCallBack = value;
    }

    public boolean isSetServiceTimesMultCallBack() {
        return (this.serviceTimesMultCallBack!= null);
    }

    /**
     * Gets the value of the weight property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getWeight() {
        if (weight == null) {
            return  1.0D;
        } else {
            return weight;
        }
    }

    /**
     * Sets the value of the weight property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setWeight(double value) {
        this.weight = value;
    }

    public boolean isSetWeight() {
        return (this.weight!= null);
    }

    public void unsetWeight() {
        this.weight = null;
    }

    /**
     * Gets the value of the serviceTimesMult property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getServiceTimesMult() {
        if (serviceTimesMult == null) {
            return  1.0D;
        } else {
            return serviceTimesMult;
        }
    }

    /**
     * Sets the value of the serviceTimesMult property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setServiceTimesMult(double value) {
        this.serviceTimesMult = value;
    }

    public boolean isSetServiceTimesMult() {
        return (this.serviceTimesMult!= null);
    }

    public void unsetServiceTimesMult() {
        this.serviceTimesMult = null;
    }

    /**
     * Gets the value of the conferenceTimesMult property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getConferenceTimesMult() {
        if (conferenceTimesMult == null) {
            return  1.0D;
        } else {
            return conferenceTimesMult;
        }
    }

    /**
     * Sets the value of the conferenceTimesMult property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setConferenceTimesMult(double value) {
        this.conferenceTimesMult = value;
    }

    public boolean isSetConferenceTimesMult() {
        return (this.conferenceTimesMult!= null);
    }

    public void unsetConferenceTimesMult() {
        this.conferenceTimesMult = null;
    }

    /**
     * Gets the value of the preServiceTimesNoConfMult property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getPreServiceTimesNoConfMult() {
        if (preServiceTimesNoConfMult == null) {
            return  1.0D;
        } else {
            return preServiceTimesNoConfMult;
        }
    }

    /**
     * Sets the value of the preServiceTimesNoConfMult property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setPreServiceTimesNoConfMult(double value) {
        this.preServiceTimesNoConfMult = value;
    }

    public boolean isSetPreServiceTimesNoConfMult() {
        return (this.preServiceTimesNoConfMult!= null);
    }

    public void unsetPreServiceTimesNoConfMult() {
        this.preServiceTimesNoConfMult = null;
    }

    /**
     * Gets the value of the transferTimesMult property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getTransferTimesMult() {
        if (transferTimesMult == null) {
            return  1.0D;
        } else {
            return transferTimesMult;
        }
    }

    /**
     * Sets the value of the transferTimesMult property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setTransferTimesMult(double value) {
        this.transferTimesMult = value;
    }

    public boolean isSetTransferTimesMult() {
        return (this.transferTimesMult!= null);
    }

    public void unsetTransferTimesMult() {
        this.transferTimesMult = null;
    }

    /**
     * Gets the value of the checkAgentsForTransfer property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isCheckAgentsForTransfer() {
        if (checkAgentsForTransfer == null) {
            return false;
        } else {
            return checkAgentsForTransfer;
        }
    }

    /**
     * Sets the value of the checkAgentsForTransfer property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setCheckAgentsForTransfer(boolean value) {
        this.checkAgentsForTransfer = value;
    }

    public boolean isSetCheckAgentsForTransfer() {
        return (this.checkAgentsForTransfer!= null);
    }

    public void unsetCheckAgentsForTransfer() {
        this.checkAgentsForTransfer = null;
    }

    /**
     * Gets the value of the waitingTimeDefaultVQ property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public double getWaitingTimeDefaultVQ() {
        if (waitingTimeDefaultVQ == null) {
            return  0.0D;
        } else {
            return waitingTimeDefaultVQ;
        }
    }

    /**
     * Sets the value of the waitingTimeDefaultVQ property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setWaitingTimeDefaultVQ(double value) {
        this.waitingTimeDefaultVQ = value;
    }

    public boolean isSetWaitingTimeDefaultVQ() {
        return (this.waitingTimeDefaultVQ!= null);
    }

    public void unsetWaitingTimeDefaultVQ() {
        this.waitingTimeDefaultVQ = null;
    }

    /**
     * Gets the value of the windowSizeVQ property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getWindowSizeVQ() {
        if (windowSizeVQ == null) {
            return  1;
        } else {
            return windowSizeVQ;
        }
    }

    /**
     * Sets the value of the windowSizeVQ property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setWindowSizeVQ(int value) {
        this.windowSizeVQ = value;
    }

    public boolean isSetWindowSizeVQ() {
        return (this.windowSizeVQ!= null);
    }

    public void unsetWindowSizeVQ() {
        this.windowSizeVQ = null;
    }

    /**
     * Gets the value of the virtualQueueTargetType property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getVirtualQueueTargetType() {
        return virtualQueueTargetType;
    }

    /**
     * Sets the value of the virtualQueueTargetType property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setVirtualQueueTargetType(int value) {
        this.virtualQueueTargetType = value;
    }

    public boolean isSetVirtualQueueTargetType() {
        return (this.virtualQueueTargetType!= null);
    }

    public void unsetVirtualQueueTargetType() {
        this.virtualQueueTargetType = null;
    }

}
